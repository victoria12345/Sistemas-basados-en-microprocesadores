CODIGO SEGMENT
	ASSUME CS : CODIGO
	ORG 256
INICIO: 

; VARIABLES GLOBALES
CLR_PANT 	DB 	1BH,"[2","J$"
TABLA_L DB "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
TABLA_N DW "43","44","45","46","51","52","53","54","55","56","61","62","63","64","65","66","11","12","13","14","15","16","21","22","23","24","25","26","31","32","33","34","35","36","41","42"
INSTALADO DW 0
ESTADO DB 1BH,"[1;1fEstado de instalacion: $"
INST_SI DB 1BH,"[1;2fEl driver esta instalado$"
INST_NO DB 1BH,"[1;2fEl driver no esta instalado$"
NUM_GRUPO DB 1BH,"[1;4fNumero de grupo en Polibio: 31 32 25 26.$" 
NOMBRES DB 1BH,"[1;6fAutores: Victoria Pelayo e Ignacio Rabunnal$"
INSTRU DB 1BH,"[1;8fInstrucciones: $"
INSTRUCCIONES DB 1BH,"[1;9fEjecutar el programa con el parametro /I si quiere instalar el driver$"
INSTRUCCIONES_2 DB 1BH,"[1;10fEjecutar el programa con el parametro /D si quiere desinstalar el driver$"

MOV AX, SS:[80H]
CMP AX, 00h
;JNE 


MOV AH, 9
MOV DX, OFFSET CLR_PANT
INT 21H
MOV DX, OFFSET ESTADO
INT 21H

CMP INSTALADO, 00h
JNE ESTA_READY

MOV DX, OFFSET INST_NO
INT 21H
JMP NG
ESTA_READY: 
	MOV DX, OFFSET INST_SI
	INT 21H
NG:	
	MOV DX, OFFSET NUM_GRUPO
	INT 21H
	MOV DX, OFFSET NOMBRES
	INT 21H
	MOV DX, OFFSET INSTRU
	INT 21H
	MOV DX, OFFSET INSTRUCCIONES
	INT 21H
	MOV DX, OFFSET INSTRUCCIONES_2
	INT 21H


;JMP INSTALADOR


; RUTINA DE SERVICIO A LA INTERRUPCIÓN
; RSI PROC FAR
				; ; SALVA REGISTROS MODIFICADOS
	; PUSH  ; INSTRUCCIONES DE LA RUTINA ... ; RECUPERA REGISTROS MODIFICADOS
	; POP  IRET
; RSI ENDP

; INSTALADOR PROC 
	; MOV AX, 0 
	; MOV ES, AX 
	; MOV AX, OFFSET RSI 
	; MOV BX, CS 
	; CLI 
	; MOV ES:[ 57H*4 ], AX 
	; MOV ES:[ 57H*4+2 ], BX 
	; STI 
	; MOV DX, OFFSET INSTALADOR 
	; INT 27H ; ACABA Y DEJA RESIDENTE ; PSP, VARIABLES Y RUTINA RSI. 
; INSTALADOR ENDP 

; DESINSTALADOR PROC ; DESINSTALA RSI DE INT 57H
	; PUSH AX BX CX DS ES
	; MOV CX, 0
	; MOV DS, CX ; SEGMENTO DE VECTORES INTERRUPCIÓN
	; MOV ES, DS:[ 57H*4+2 ] ; LEE SEGMENTO DE RSI
	; MOV BX, ES:[ 2CH ] ; LEE SEGMENTO DE ENTORNO DEL PSP DE RSI
	; MOV AH, 49H
	; INT 21H ; LIBERA SEGMENTO DE RSI (ES)
	; MOV ES, BX
	; INT 21H ; LIBERA SEGMENTO DE VARIABLES DE ENTORNO DE RSI
	;PONE A CERO VECTOR DE INTERRUPCIÓN 57H
	; CLI
	; MOV DS:[ 57H*4 ], CX ; CX = 0
	; MOV DS:[ 57H*4+2 ], CX
	; STI
	; POP ES DS CX BX AX
	; RET
; DESINSTALADOR ENDP

; TRADUCIR PROC NEAR
	;RECIBIMOS EN AX LA LETRA
	; PUSH SI, BX
	; MOV SI, 0
	
	; OTRA_MAS: 
		; MOV BX, TABLA_L[SI]
		; INC SI
		; CMP BX, AX
		; JNE OTRA_MAS
	
	; MOV AX, TABLA_N[SI-1]
	; POP BX, SI
; TRADUCIR ENDP



CODIGO ENDS 
END INICIO